#!/bin/bash
#	Process the columns of condor_q -l.

	PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin
    save_IFS=$IFS

    if [[ 'x'$MUNIN_JOBSBYUSER_CLOUDS = 'x' || 'x'$MUNIN_JOBSBYUSER_USERS = 'x' ]]; then
        echo
        echo "Missing configuration; /etc/munin/plugin-conf.d/jobsbyuser.conf must specify:"
        echo "   env.MUNIN_JOBSBYUSER_CLOUDS cloud_1 cloud_2 ... cloud_N"
        echo "   env.MUNIN_JOBSBYUSER_USERS user_1 user_2 ... user_N"
        echo 
        echo "NB: For every cloud there should be a matching Compute Domain."
        exit 1
    fi

	if [ "$1" = "config" ]; then
        for user in $MUNIN_JOBSBYUSER_USERS; do
            echo "multigraph jobs_by_"$user
            echo "graph_args --lower-limit 0"
            echo "graph_title HTCondor Jobs by User:" $user
            echo "graph_category Cloud"
            echo "graph_vlabel Jobs"
            echo "graph_width 600"
            echo "graph_height 300"
            echo 

            areastack='AREA'
            for cloud_parms in $MUNIN_JOBSBYUSER_CLOUDS; do
                IFS=":"
                cloud=($cloud_parms)
                IFS=$save_IFS

                echo ${cloud[0]}".label" ${cloud[0]}
                echo ${cloud[0]}".draw" $areastack
                echo ${cloud[0]}".max 10000"
                echo ${cloud[0]}".min 0"
                echo 
                areastack='STACK'
            done
        done
	else
        for cloud_parms in $MUNIN_JOBSBYUSER_CLOUDS; do
            IFS=":"
            cloud=($cloud_parms)
            IFS=$save_IFS

            cloudlist=$cloudlist" "${cloud[0]}
            domainlist=$domainlist" "${cloud[1]}
        done

		condor_q -running | awk -v cloudlist="$cloudlist"  -v domainlist="$domainlist" -v userlist="$MUNIN_JOBSBYUSER_USERS" \
			'BEGIN{ \
				cloudcount = split(cloudlist, clouds); \
				domaincount = split(domainlist, domains); \
				usercount = split(userlist, users); \
				for (domain=1; domain<=domaincount; domain++) { \
                    domain2cloud[domains[domain]]=clouds[domain]; \
                    } \
				} \

            // { \
                user=$2; \

                ix=index($6, ".")+1; \
                if (ix<2) next; \
                domain=substr($6, ix, length($6)+1-ix); \

                counts[user,domain2cloud[domain]]=counts[user,domain2cloud[domain]]+1; \
                } \

			END{ \
				for (user=1; user<=usercount; user++) { \
					print "multigraph jobs_by_" users[user]; \
                    for (cloud=1; cloud<=cloudcount; cloud++) { \
                        print clouds[cloud]".value " counts[users[user], clouds[cloud]]+0; \
                        } \
					} \
				}'
	fi
