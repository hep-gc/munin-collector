#!/bin/bash
#	Process the columns of cloud_status -m
#
#	$1          $2                      $3                  $4          $5          $6      
#	ID          HOSTNAME                VMTYPE              USER        STATUS      CLUSTER
#
#   States:
#       Unstaged (000000, ignore this one it's never seen),
#       Unpropagated (cccccc)
#       Starting (008000)
#       Running (00ff00)
#       Error (000000)
#       Shutdown (ff00ff, ec2 only)
#
#   The special states for Nimbus:
#       HTTPFail (e9c6af)
#       BrokenPipes (deaa87),
#       Destroyed (d38d5f)
#       NoProxy (c87137)
#       ExpiredProxy (a05a2c)
#       ConnectionRefused (784421)  - most of which are just more specific errors

	declare -i StatusCol=5
	declare -i ClusterCol=6

	PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin

	if [ "$1" = "config" ]; then
		cloud_status -l | sort | awk \
			'BEGIN{ \
				cloudcount = 0; \
				} \

			{ \
				if ($1=="") next; \
				cloudcount++; \
				clouds[cloudcount] = $1 \
				} \

			END{ \
				for (cloud=1; cloud<=cloudcount; cloud++) { \
					print "multigraph cloud_" clouds[cloud]; \
					print "graph_title Cloud Activity on " clouds[cloud]; \
					print "graph_category Cloud"; \
					print "graph_vlabel Virtual Machines"; \
					print "graph_width 800"; \
					print "graph_height 500\n"; \

					print "error.label Error"; \
					print "error.draw AREA"; \
					print "error.colour 000000"; \
					print "error.max 10000"; \
					print "error.min 0\n"; \

					print "httpfail.label HTTPfail"; \
					print "httpfail.draw STACK"; \
					print "httpfail.colour e9c6af"; \
					print "httpfail.max 10000"; \
					print "httpfail.min 0\n"; \

					print "brokenpipes.label BrokwnPipes"; \
					print "brokenpipes.draw STACK"; \
					print "brokenpipes.colour deaa87"; \
					print "brokenpipes.max 10000"; \
					print "brokenpipes.min 0\n"; \

					print "destroyed.label Destroyed"; \
					print "destroyed.draw STACK"; \
					print "destroyed.colour d38d5f"; \
					print "destroyed.max 10000"; \
					print "destroyed.min 0\n"; \

					print "noproxy.label NoProxy"; \
					print "noproxy.draw STACK"; \
					print "noproxy.colour c87137"; \
					print "noproxy.max 10000"; \
					print "noproxy.min 0\n"; \

					print "expiredproxy.label ExpiredProxy"; \
					print "expiredproxy.draw STACK"; \
					print "expiredproxy.colour a05a2c"; \
					print "expiredproxy.max 10000"; \
					print "expiredproxy.min 0\n"; \

					print "connectionrefused.label ConnectionRefused"; \
					print "connectionrefused.draw STACK"; \
					print "connectionrefused.colour 784421"; \
					print "connectionrefused.max 10000"; \
					print "connectionrefused.min 0\n"; \

					print "unpropagated.label Unpropagated"; \
					print "unpropagated.draw STACK"; \
					print "unpropagated.colour cccccc"; \
					print "unpropagated.max 10000"; \
					print "unpropagated.min 0\n"; \

					print "starting.label Starting"; \
					print "starting.draw STACK"; \
					print "starting.colour 008000"; \
					print "starting.max 10000"; \
					print "starting.min 0\n"; \

					print "running.label Running"; \
					print "running.draw STACK"; \
					print "running.colour 00ff00"; \
					print "running.max 10000"; \
					print "running.min 0\n"; \

					print "heartbeat.label Cloud Scheduler Heartbeat"; \
					print "heartbeat.draw LINE3"; \
					print "heartbeat.colour ff0000\n"; \
					} \
				}'
	else
		cloud_status -m | awk \
			'BEGIN{ \
				cloudcount = 0; \
				while (("cloud_status -l | sort" | getline line)>0) { \
					split(line, words); \
					if (words[1]!="") { \
						cloudcount++; \
						clouds[cloudcount] = words[1] \
						} \
					} \

				switch = "Yes" \
				} \

			/couldn\047t connect/ {switch="No"}; \

			// { \
				if ($0=="" || $1=="ID" || $1=="Total") next; \
				state="error"; \
				if ($'$StatusCol'=="HTTPFail") state="httpfail"; \
				if ($'$StatusCol'=="BrokenPipes") state="brokenpipes"; \
				if ($'$StatusCol'=="Destroyed") state="destroyed"; \
				if ($'$StatusCol'=="NoProxy") state="noproxy"; \
				if ($'$StatusCol'=="ExpiredProxy") state="expiredproxy"; \
				if ($'$StatusCol'=="ConnectionRefused") state="connectionrefused"; \
				if ($'$StatusCol'=="Unpropagated") state="unpropagated"; \
				if ($'$StatusCol'=="Starting") state="starting"; \
				if ($'$StatusCol'=="Running") state="running"; \
				count[$'$ClusterCol',state]++ \
				} \

			END{ \
				for (cloud=1; cloud<=cloudcount; cloud++) { \
					print "multigraph cloud_" clouds[cloud]; \
					print "error.value " count[clouds[cloud],"error"]+0; \
					print "running.value " count[clouds[cloud],"running"]+0; \
					print "starting.value " count[clouds[cloud],"starting"]+0; \

					if (switch=="Yes") print "heartbeat.value 0.0"; \
					print "\n" \
					} \
				}'
	fi
