<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal">

<head>
  <title>Munin-Collector Display Metrics</title>
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
  <meta name="keywords" content="python web application" />
  <meta name="description" content="pyramid web application" />
  <link rel="shortcut icon" href="${request.static_url('munincollector:static/favicon.ico')}" />
  <link rel="stylesheet" href="${request.static_url('munincollector:static/pylons.css')}" type="text/css" media="screen" charset="utf-8" />
  <link rel="stylesheet" href="http://static.pylonsproject.org/fonts/nobile/stylesheet.css" media="screen">
  <link rel="stylesheet" href="http://static.pylonsproject.org/fonts/neuton/stylesheet.css" media="screen">

  <!--[if lte IE 6]>
  <link rel="stylesheet" href="${request.static_url('munincollector:static/ie6.css')}" type="text/css" media="screen" charset="utf-8" />
  <![endif]-->

<script type="text/javascript">
window.onload = function() {
    SetCBs();
    CountCBs();
    DisableFields();
}

function CountCBs(my) {
    var children, count, firstnode, i;

    if (my == null) {
        firstnode=document.getElementById("resource-list");
        count = CountCBs(firstnode);
        if (count == 1) {
            document.getElementById("selected-resources").innerHTML = count + " selected resource.";
            }
        else {
            document.getElementById("selected-resources").innerHTML = count + " selected resources.";
            }
        }
    else {
        count = 0;
        if (my.tagName == "INPUT" && my.attributes[0].nodeValue == "checkbox") {
            if (my.checked == true) {
                count = 1;
                }
            }

        children = my.childNodes;
        for (i=0;i<children.length;i++) {
            count += CountCBs(children[i]);
            }

        return count;
        }
}

function DisableFields(my) {
    var children, firstnode, i;

    if (my == null) {
        firstnode=document.getElementById("options-section");
        DisableFields(firstnode);
        }
    else {
        if (my.tagName == "INPUT" && my.name == "disabled") {
            my.disabled = true;
            }

        children = my.childNodes;
        for (i=0;i<children.length;i++) {
            DisableFields(children[i]);
            }
        return;
        }
}

function EnableDisable(id1,id2) {
    if (document.getElementById(id1).disabled == true) {
        document.getElementById(id1).name = id1
        document.getElementById(id1).disabled = false;
        }
    else {
        document.getElementById(id1).name = "disabled"
        document.getElementById(id1).disabled = true;
        }

    if (id1 == id2 || document.getElementById(id1).disabled == true)
        return;

    document.getElementById(id2).name = "disabled"
    document.getElementById(id2).disabled = true;
    return;
}

function OptionHelp(msg) {
    alert(msg);
}

function SetCBs(my) {
    var cbs, i;

    if (document.getElementById("h2").value != "") {
        cbs = document.getElementById("h2").value.split("_");
        for (i=0;i<cbs.length;i++) {
            document.getElementById(cbs[i]).checked = true;
        }
    }
}

function SetH2(my) {
    var children, firstnode, h2_string = '', h2_string_child,  i;

    if (my == null) {
        firstnode=document.getElementById("resource-list");
        document.getElementById("h2").value = SetH2(firstnode);
        }
    else {
        if (my.tagName == "INPUT" && my.attributes[0].nodeValue == "checkbox") {
            if (my.checked == true) {
                h2_string = my.id;
                }
            }

        children = my.childNodes;
        for (i=0;i<children.length;i++) {
            h2_string_child = SetH2(children[i]);
            if (h2_string_child != '') {
                if (h2_string == '') {
                    h2_string = h2_string_child; 
                    }
                else {
                    h2_string += "_" + h2_string_child;
                    }
                }
            }
        return h2_string;
        }
}

function ToggleChildCBs(pid, my) {
    var children, firstnode, i, parent_id;

    if (my == null) {
        firstnode=document.getElementById("resource-list");
        ToggleChildCBs(pid, firstnode);
        CountCBs();
        }
    else {
        if (my.tagName == "INPUT" && my.attributes[0].nodeValue == "checkbox") {
            parent_id = pid + "."
            if (my.id.length > parent_id.length) {
                if (my.id.slice(0, parent_id.length) == parent_id) {
                    my.checked = document.getElementById(pid).checked
                    }
                }
            }

        children = my.childNodes;
        for (i=0;i<children.length;i++) {
            ToggleChildCBs(pid, children[i]);
            }

        return;
        }
}

function ToggleDisplay(id) {
    var element;

    element = document.getElementById(id);
    if (element.style.display == '' || element.style.display == 'block')
        element.style.display = 'none';
    else
        element.style.display = 'block';

    return;
}
</script>
</head>


<body>
    <div id="middle" class="middle align-center">
        <p class="app-welcome">
            <span class="app-name">Munin-Collector:</span> An application to collect and present statistics.
            <br/><br/>Sections and lists may be expanded or collapsed by clicking on the section suffix ("...") or element count ("(nn)").
            <br/>${request.str_params}
        </p>
    </div><!--id="middle"-->

    <div id="content" class="bottom">
        <form id=selections>

        <input type="hidden" id="h1" name="h1" value="${Options['h1']['value']}" />
        <input type="hidden" id="h2" name="h2" value="${Options['h2']['value']}" />

        <h2 onclick="ToggleDisplay('graph-section');">Graphs...</h2>
        <div id="graph-section">    
            <div tal:repeat="graph Selections">
                <table tal:condition="repeat.graph.start">
                        <td>
                            ${graph[0]}
                            <br /><img src="${request.static_url('munincollector:static/munin/')}${graph[1]}" />
                        </td>
                </table tal:condition="repeat.graph.end">
            </div>
        </div><!-- id="graph-section"-->

        <h2 onclick="ToggleDisplay('select-section');">Select Resources...</h2>
        <div id="select-section">    
            <br><input onclick="SetH2();" type="submit" value="Show" /><span id=selected-resources>n selected resources.</span><br>

            <br><p> Use the checkboxes to select/unselect resources to be graphed. Selecting a parent, selects all children. Subsequently, children may selected/unselected.</p><br>

            <ul id="resource-list" class="links">
                <li tal:repeat="host (sorted(PluginConfigs['links']))">
                    <input onclick="ToggleChildCBs('${repeat.host.number}');" id="${repeat.host.number}" type="checkbox" />
                    <span tal:replace="host" />
                    <span onclick="ToggleDisplay('x${repeat.host.number}');">
                    (${len(PluginConfigs['links'][host])})
                    </span>

                    <div style="display:none" id="x${repeat.host.number}">    
                        <ul class="links">

                            <li tal:repeat="plugin (sorted(PluginConfigs['links'][host]))">
                                &nbsp; &nbsp; &nbsp;
                                <input onclick="ToggleChildCBs('${repeat.host.number}.${repeat.plugin.number}');" id="${repeat.host.number}.${repeat.plugin.number}" type="checkbox" />
                                ${plugin}
                                <span onclick="ToggleDisplay('x${repeat.host.number}x${repeat.plugin.number}');">
                                (${len(PluginConfigs['config'][PluginConfigs['links'][host][plugin]])})
                                </span>

                                <div tal:condition="len(PluginConfigs['config'][PluginConfigs['links'][host][plugin]])>1">
                                    <div style="display:none" id="x${repeat.host.number}x${repeat.plugin.number}">
                                        <ul class="links">
                                            <li tal:repeat="mgid (sorted(PluginConfigs['config'][PluginConfigs['links'][host][plugin]]))">
                                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                                <input onclick="ToggleChildCBs('${repeat.host.number}.${repeat.plugin.number}.${repeat.mgid.number}');" id="${repeat.host.number}.${repeat.plugin.number}.${repeat.mgid.number}" type="checkbox" />
                                                <span tal:replace="mgid" />
                                            </li>
                                        </ul>
                                    </div>
                                </div>

                            </li>
                        </ul>
                    </div><!--id="test-section"-->    
                    
               </li>
            </ul>
        </div><!-- id="select-section"-->

        <br>

        <h2 onclick="ToggleDisplay('options-section');">Options...</h2>
        <div style="display:none" id="options-section">    
            <br><p>
                Enable or disable options by clicking on the corresponding option label.
                Click on the question mark ("?") for information about each option.
            </p><br>

             <div id="left">
                <br><span onclick="EnableDisable('gt','gt');">Title</span>
                <span onclick="OptionHelp('Title: Specify a title text string to be used for all graphs generated. By default, a unique graph title is defined by the originating Munin plugin.');">(?)</span>

                <br><span onclick="EnableDisable('sa','sr');">Absolute Start Time</span>
                <span onclick="OptionHelp('Absolute Start Time: Specifies the number of seconds since the Linux epoch (1 Jan 1970, 00:00:00) for the origin of the \'x\' axis. If omitted, the value will be calculated from the Relative Start Time.');">(?)</span>

                <br><span onclick="EnableDisable('sr','sa');">Relative Start Time</span>
                <span onclick="OptionHelp('Relative Start Time: Specifies the number of hours in the past from now for the origin of the \'x\' axis. The default value is -30, but a decimal value in the range of -.5 to -100000 can be specified.');">(?)</span>

                <br><span onclick="EnableDisable('tr','tr');">Time Range</span>
                <span onclick="OptionHelp('Time Range: Specifies the number of hours represented by the \'x\' axis. The default value is 30, but a decimal value in the range of .5 to 100000 can be specified.');">(?)</span>

                <br><span onclick="EnableDisable('ht','ht');">Height</span>
                <span onclick="OptionHelp('Height: Specifies the height of the graph in pixels. The default value is 600, but a decimal value in the range of 100 to 2400 can be specified.');">(?)</span>

                <br><span onclick="EnableDisable('wd','wd');">Width</span>
                <span onclick="OptionHelp('Width: Specifies the width of the graph in pixels. The default value is 1200, but a decimal value in the range of 100 to 2400 can be specified.');">(?)</span>

                <br><span onclick="EnableDisable('fl','fl');">Label Font Size</span>
                <span onclick="OptionHelp('Label Font Size: Specifies the size of the fonts to be used for graph titles and labels. The default value is 8, but a decimal value in the range of 6 to 32 can be specified.');">(?)</span>
                <br><span onclick="EnableDisable('fs','fs');">Statistics Font Size</span>
                <span onclick="OptionHelp('Statistics Font Size: Specifies the size of the fonts to be used for graph statistics. The default value is 8, but a decimal value in the range of 0 to 32 can be specified. Specifying a value of 0 disables statistics and they will not be displayed on the graphs.');">(?)</span>

                <br><span onclick="EnableDisable('to','to');">Time Out</span>
                <span onclick="OptionHelp('Timeout: Specifies the number of seconds before graphs and the display are to be refreshed. The default value is 300, but a decimal value in the range of 60 to 3600 can be specified.');">(?)</span>

            </div>

            <div id="right">
                <br><input type="text" id="gt" name="${Options['gt']['disabled']}" value="${Options['gt']['value']}" size=32 />
                <br><input type="text" id="sa" name="${Options['sa']['disabled']}" value="${Options['sa']['value']}" size=16 />
                <br><input type="text" id="sr" name="${Options['sr']['disabled']}" value="-${Options['sr']['value']}" size=8 />
                <br><input type="text" id="tr" name="${Options['tr']['disabled']}" value="${Options['tr']['value']}" size=8 />
                <br><input type="text" id="ht" name="${Options['ht']['disabled']}" value="${Options['ht']['value']}" size=8 />
                <br><input type="text" id="wd" name="${Options['wd']['disabled']}" value="${Options['wd']['value']}" size=8 />
                <br><input type="text" id="fl" name="${Options['fl']['disabled']}" value="${Options['fl']['value']}" size=8 />
                <br><input type="text" id="fs" name="${Options['fs']['disabled']}" value="${Options['fs']['value']}" size=8 />
                <br><input type="text" id="to" name="${Options['to']['disabled']}" value="${Options['to']['value']}" size=8 />
                <br><br><br><br>
            </div>
        </div><!-- id="options-section"-->

        </form>
    </div><!--id="content"-->

    <br><br><br><br>

    <div id="footer">
        <div class="footer">&copy; Copyright 2011, University of Victoria.</div>
    </div>
</body>
</html>

